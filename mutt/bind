# vim:ft=muttrc syntax=neomuttrc
#### ESSENTIALS #########################
# |-------|---------------------------------|
# | bu/bd | switch on/off qb preview window |
# | gg    | first entry                     |
# | G     | last entry                      |
# | bs    | sidebar                         |
# | ss    | save to                         |
# | a     | goobook                         |
# | B     | browser                         |
# | I     | browser text                    |
# | c'x'  | change folder                   |
# | .ll   | limit all                       |
# | .lf | limit important |
# REQ SETS #################################
set confirmappend=no
# noops ####################################
bind index,pager,compose,attach	o	noop
bind index,pager,compose,attach	ob 	noop
bind index,pager	c	noop
bind index,pager 	v 	noop
bind index 		, 	noop
bind index,pager 	. 	noop
bind index,pager 	b	noop
bind index,pager 	g 	noop
bind index,pager	m	noop
bind index,pager 	'V' 	noop
bind index,pager 	's' 	noop
#== NAV ======================
macro index,pager   '.r'  \
	'<enter-command>source $my_cfg/muttrc<enter>'
macro index,pager   '.ll'  	"<limit>all<enter>"
macro index,pager   '.lf'  	"<limit>~F<enter>" 	# Limit to important flag
bind index,pager 	'mm' 	"mail"
bind index,pager    'mv'  	"view-attachments"
bind index,pager    'mb'  	"buffy-list"
bind index,pager    'mr'  	"view-raw-message"
#macro index,pager   'mw'  	"<sync-mailbox>y<enter>"
macro index,pager   'mww'  	"<sync-mailbox>y<enter>"
bind index,pager 	'oo' 	sort-mailbox
bind index,pager 	'ob' 	sort-mailbox
bind index,pager	'R'  	group-reply
macro index,pager	'gg'    "<first-entry>"
macro index,pager	'G'		"<last-entry>"
set my_nund = "<next-undeleted><next-undeleted><next-undeleted>"
set my_pund = "<previous-undeleted><previous-undeleted><previous-undeleted>"
macro index,pager	\ej "$my_nund$my_nund$my_nund$my_nund"
macro index,pager	\ek "$my_pund$my_pund$my_pund$my_pund"
#macro index,pager	\ej "<next-undeleted><next-undeleted><next-undeleted><next-undeleted><next-undeleted><next-undeleted><next-undeleted><next-undeleted><next-undeleted><next-undeleted>"
#macro index,pager	\ek "<previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted><previous-undeleted>"
# sidebar ####################################
#bind index,pager    B   sidebar-toggle-visible
bind index,pager 	bs 	sidebar-toggle-visible
bind index,pager 	"\Ck" 	sidebar-prev
bind index,pager 	"\Cj" 	sidebar-next
bind index,pager 	"\Co" 	sidebar-open
bind pager 		"\Cv" 	sidebar-toggle-virtual
bind pager 		"\CV" 	sidebar-toggle-virtual
#== Contacts ===============
bind editor 		<Tab> 	complete-query
bind editor 		^T 		complete
macro index,pager	A 		<create-alias>
macro index,pager 	a 	\
	"<pipe-message>goobook add<return>" # ADD CONTACT
## mb nav #####################################
#cc alts: gl gc gld glm gl
macro index,pager co 	"<change-folder>" #quicker keystrokes
macro index,pager cc 	"<change-folder>"
macro index,pager cm 	"<change-folder>?"
macro index,pager cl 	"<change-folder>?<tab>"
macro index,pager ss 	"<save-message>="
macro index,pager .ww 	"<save-message>="
## notmuch
macro index,pager vl 	"<modify-labels>"
macro index,pager vc 	"<change-vfolder>?" "Change to vfolder root"
## viewers #####################################
# vars
set my_fifo        = "/tmp/mutt-fifo"
set my_tmp_mime    = "~/.cache/mutt/mlx.mime"
set my_tmp_mlx     = "~/.cache/mutt/mlx.html"
set my_c_html_get  = "<view-attachments><search>html<enter>"
# pipe
set my_c_pipe_mlx  = "<pipe-entry>cat > $my_tmp_mlx<enter>"
set my_c_pipe_ic   = "<pipe-entry>iconv -c --to-code=UTF8 > $my_tmp_mlx<enter>"
# browser
set my_c_brx	   = "<shell-escape>mlx browser > /dev/null 2>&1 &<enter>"
set my_c_bfl       = "<shell-escape>mlx qb.float<enter>"
set my_c_btrm      = "<shell-escape>mlx term<enter>"
# macro
set my_c_b_x       = "$my_c_html_get  $my_c_pipe    $my_c_brx<exit>"
set my_c_bfl_x     = "$my_c_html_get  $my_c_pipe_ic $my_c_bfl<exit>"
set my_c_bterm_x   = "$my_c_html_get  $my_c_pipe    $my_c_btrm<exit>"
set my_c_b_y       = "$my_c_pipe_ic   $my_c_brx<exit>"
set my_c_bfl_y     = "$my_c_pipe_ic   $my_c_bfl<exit>"
set my_c_style     = "$my_c_pipe <shell-escape>mlx md2html<enter>"
set my_c_pipe_fifo = "<pipe-entry>cat > $my_tmp_mime && echo y > $my_fifo<enter>"
set my_next_u      = '<enter-command>macro index,pager j "<next-entry>$my_c_pipe_fifo"'
set my_next_d      = '<enter-command>macro index,pager j "<next-entry>"'
set my_prev_u      = '<enter-command>macro index,pager k "<previous-entry>$my_c_pipe_fifo'
set my_prev_d      = '<enter-command>macro index,pager k "<previous-entry>"'
macro index,pager         bu "$my_next_u<enter>$my_prev_u<enter>"
macro index,pager         bd "$my_next_d<enter>$my_prev_d<enter>"
macro index,pager         zm "<shell-escape>mlx qb.rip &<enter>"
startup-hook 		      "push 'bu'"
startup-hook              "push 'zm'"
#macro index,pager zt      "$my_c_pipe_mlx" # test
# viewers
macro index,pager		'B'    "$my_c_b_x"
macro attach,compose 	'B'    "$my_c_b_y
macro index,pager		'of'   "$my_c_bfl_x"   # floating
macro attach,compose 	'of'   "$my_c_bfl_y"   # floating
macro index,pager 		'I'    "$my_c_bterm_x" # browser.text
macro compose 			.mm    "$my_c_style"   # post processing styling
#macro attach,compose 	'ob'
#macro index,pager		'ob' 

#############################################################
# TODO: integrate urlview or someway to extract a url and open it in qb.. an unsub url
# TODO: is the index version above useful?
#unbind j
#unbind k
#macro pager               j  "" # does not work yet
#macro pager               k  "<previous-entry>$my_c_pageb" # does not work yet
#message-hook             . "|qb qmutt %s\n"
#message-hook             . 'B' # does not work yet
#message-hook             . "$my_c_b_x" # does not work yet
##############################################
# archive
#unset wait_key
#macro index,pager zt 	|' cat > ~/tmpml'
#macro index,pager zt     "!echo %f > ~/current_message_id\n"
#set my_c_pipe_mlx  = "<pipe-entry>mlx qb.rip &<enter>"
#set my_c_pipe_mlx   = "<pipe-entry>cat > $my_tmp_mlx && mlx qb.rip.y<enter>"
#set my_c_pipe_mlx  = "<pipe-entry><enter>"
#macro index,pager zt     |"mlx qb.rip &<enter>"
#set my_v_if        = "<enter-command>if-shell 'test \"$qute_view\" = \"yes\"' 'push $my_c_b_x'<enter>"
#set my_next_ux     = '<enter-command>macro index,pager j "<next-entry>$my_c_b_x"'
#set my_next_dx     = '<enter-command>macro index,pager j "<next-entry>"'
#set my_prev_ux     = '<enter-command>macro index,pager k "<previous-entry>$my_c_b_x"'
#set my_prev_dx     = '<enter-command>macro index,pager k "<previous-entry>"'
#set my_next_u      = '"$my_nextx" j "<next-entry>$my_c_pipe_mlx"'
#set my_next_u      = '<enter-command>macro index,pager j "<next-entry>$my_c_pipe_mlx"'
#macro attach 'V' "<pipe-entry>iconv -c --to-code=utf8 > ~/.cache/mutt/mail.html<enter><shell-escape>$BROWSER ~/.cache/mutt/mail.html<enter>"
#set my_c_pipe_fifo = "<pipe-entry>iconv -c --to-code=UTF8 > $my_tmp_mlx && echo y > $my_fifo<enter>"

